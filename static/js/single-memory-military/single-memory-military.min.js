/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/pages/single-memory-military.js":
/*!************************************************!*\
  !*** ./src/js/pages/single-memory-military.js ***!
  \************************************************/
/***/ (function() {

eval("jQuery(document).ready(function ($) {\n  /***********************\r\n   *           Letters\r\n   ***********************/\n\n  $.fn.lettering = function (method) {\n    return this.each(function () {\n      var letters = $(this).text().replace(/\\s+/g, ' ').split('');\n      console.log(letters);\n      $(this).css({\n        visibility: 'hidden',\n        overflow: 'hidden',\n        position: 'relative',\n        width: '100vh'\n      });\n      // $(this).width($(this).width());\n      $(this).height($(this).height());\n      var html = '';\n      for (var i = 0; i < letters.length; i++) {\n        html += '<span>' + letters[i] + '</span>';\n      }\n      $(this).html(html);\n      var positions = [];\n      $(this).find('span').each(function (i, e) {\n        positions.push({\n          top: $(this).get(0).offsetTop,\n          left: $(this).get(0).offsetLeft\n        });\n      });\n      console.log(positions);\n      $(this).find('span').each(function (i, e) {\n        $(this).css({\n          top: positions[i].top,\n          left: positions[i].left,\n          animationDelay: i * 0.1 + 's'\n        });\n      });\n      $(this).find('span').addClass('loaded');\n      $(this).css({\n        visibility: 'visible'\n      });\n    });\n  };\n\n  // $(window).load(function()\n  // {\n  $('.single-memory-name').lettering();\n  // });\n\n  /**************************\r\n   *           Fight\r\n   ***************************/\n  checkTextHeight();\n  function checkTextHeight() {\n    var textHeight = $(\".single-memory-fight__start-description\").outerHeight();\n    if (textHeight > 156) {\n      $(\".single-memory-fight__item-more\").removeClass(\"hidden\");\n    }\n  }\n  $('.single-memory-fight__section--over3').click(function () {\n    if ($(this).attr('data-modal') == '1') {\n      $(\".single-memory-fight__modal\").removeClass('hidden');\n      $('body').addClass('no-scroll');\n    }\n  });\n  $('.single-memory-fight__modal__close').click(function () {\n    $('.single-memory-fight__modal').addClass('hidden');\n    $('body').removeClass('no-scroll');\n  });\n  $('.single-memory-fight__section canvas').each(function () {\n    var canvasWidth = $(this).width();\n    var canvasHeight = $(this).height();\n    var colors = ['#000000', '#4c4636', '#2a2519', '#3b3629', '#433e2f', '#4c4636'];\n    var ctx = $(this).get(0).getContext(\"2d\");\n    ctx.canvas.width = canvasWidth;\n    ctx.canvas.height = canvasHeight;\n    for (var x = 0; x < canvasWidth; x += 30) {\n      for (var y = 0; y < canvasHeight; y += 30) {\n        ctx.fillStyle = colors[Math.floor(Math.random() * 5)];\n        if (Math.floor(Math.random() * 3) == 2) {\n          ctx.fillRect(x, y, 30, 30);\n        }\n      }\n    }\n  });\n  $(window).on('scroll', function () {\n    if ($('.single-memory-fight').length) {\n      var scrollPos = $(window).scrollTop();\n      var containerTop = $('.single-memory-fight').offset().top;\n      var height = $('.single-memory-fight').height();\n      var percentage = Math.min(height, Math.max(0, scrollPos - containerTop)) / height;\n      if (percentage < 0.25) {\n        $('.single-memory-fight__section--over1').css('opacity', percentage / 0.25);\n        $('.single-memory-fight__section--over3').css('cursor', 'pointer').attr('data-modal', '1');\n      } else if (percentage < 0.5) {\n        $('.single-memory-fight__section--over2').css('opacity', (percentage - 0.25) / 0.25);\n        $('.single-memory-fight__section--over3').css('cursor', 'default').attr('data-modal', '0');\n      } else {\n        $('.single-memory-fight__section--over3').css('opacity', (percentage - 0.5) / 0.25);\n        $('.single-memory-fight__section--over3').css('cursor', 'default').attr('data-modal', '0');\n      }\n    }\n  });\n\n  /***************************\r\n   *               MAP\r\n   ***************************/\n  if (typeof mapboxgl !== 'undefined' && typeof MapboxGeocoder !== 'undefined') {\n    $('.mapbox').each(function () {\n      var fightAdress = $(this).attr('data-location');\n      mapboxgl.accessToken = $(this).attr('data-key');\n      var map = new mapboxgl.Map({\n        container: $(this).attr('id'),\n        center: [$(this).attr('data-long'), $(this).attr('data-lat')],\n        zoom: 17,\n        attributionControl: false,\n        style: 'mapbox://styles/alex-anthracite/clssv42xu00wk01qx2r2gbmpr',\n        hash: true\n      });\n      var geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken,\n        mapboxgl: mapboxgl,\n        marker: false,\n        showSearch: false\n      });\n      map.addControl(geocoder);\n      geocoder.on('result', function (e) {\n        var coordinates = e.result.center;\n        map.flyTo({\n          center: coordinates,\n          zoom: 12\n        });\n      });\n      // geocoder.query(fightAdress);\n      if (fightAdress && typeof fightAdress === 'string') {\n        geocoder.query(fightAdress);\n      }\n      if ($(this).attr('data-region')) {\n        map.on(\"load\", function () {\n          // Add a vector source for admin-1 boundaries\n          map.addSource(\"admin-1\", {\n            type: \"vector\",\n            url: \"mapbox://mapbox.boundaries-adm1-v4\",\n            promoteId: \"mapbox_id\"\n          });\n\n          // Define a filter for US worldview boundaries\n          var worldviewFilter = [\"any\", [\"==\", \"all\", [\"get\", \"worldview\"]], [\"in\", \"UA\", [\"get\", \"worldview\"]]];\n\n          // Add a style layer with the admin-1 source below map labels\n          map.addLayer({\n            id: \"admin-1-fill\",\n            type: \"fill\",\n            source: \"admin-1\",\n            \"source-layer\": \"boundaries_admin_1\",\n            filter: worldviewFilter,\n            paint: {\n              \"fill-color\": \"#CCCCCC\",\n              \"fill-opacity\": 0.5\n            }\n          },\n          // This final argument indicates that we want to add the Boundaries layer\n          // before the `waterway-label` layer that is in the map from the Mapbox\n          // Light style. This ensures the admin polygons are rendered below any labels\n          \"waterway-label\");\n        });\n      }\n    });\n  }\n  ;\n\n  /*************************\r\n   *  Rewards Cards - read-more\r\n   ***********************/\n\n  $('.single-memory-rewards__modal__close').click(function () {\n    $(this).closest('.single-memory-rewards__modal').addClass('hidden');\n  });\n  $('.single-memory-rewards__items__more-btn').click(function () {\n    $('.single-memory-rewards__items-row.hidden:first').removeClass('hidden');\n  });\n  $('.single-memory-rewards__item-description').each(function () {\n    var $description = $(this);\n    if ($description.height() > 140) {\n      $description.siblings('.single-memory-rewards__item-more').show();\n      $description.height(144);\n    }\n  });\n  $('.single-memory-rewards__item').click(function () {\n    var $description = $(this).find('.single-memory-rewards__item-description');\n    if ($description.height() > 140) {\n      var dataId = $(this).attr('data-id');\n      $('.single-memory-rewards__modal[data-id=\"' + dataId + '\"]').removeClass('hidden');\n    }\n  });\n  /***********************\r\n   *  Dynamic Pixel Canvas\r\n   *********************/\n  $('.single-memory-top').on('mousemove', function (event) {\n    var mouseX = event.clientX;\n    var mouseY = event.clientY;\n    $('.single-memory-top__bg path').each(function () {\n      var rect = this.getBoundingClientRect();\n      var sqX = rect.left + rect.width / 2;\n      var sqY = rect.top + rect.height / 2;\n      var distance = Math.sqrt(Math.pow(sqX - mouseX, 2) + Math.pow(sqY - mouseY, 2));\n      if (distance < 100) {\n        $(this).addClass('highlighted-1').removeClass('highlighted-2 highlighted-3 highlighted');\n      } else if (distance < 250) {\n        $(this).addClass('highlighted-2').removeClass('highlighted-1 highlighted-3 highlighted');\n      } else if (distance < 500) {\n        $(this).addClass('highlighted-3').removeClass('highlighted-1 highlighted-2 highlighted');\n      } else {\n        $(this).removeClass('highlighted-1 highlighted-2 highlighted-3').addClass('highlighted');\n      }\n    });\n  });\n});\n\n//# sourceURL=webpack://inheart/./src/js/pages/single-memory-military.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/pages/single-memory-military.js"]();
/******/ 	
/******/ })()
;